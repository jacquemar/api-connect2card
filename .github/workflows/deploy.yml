name: Build and Push Backend Docker image

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/**'
      - 'package*.json'
      - 'Dockerfile'
      - '.github/workflows/deploy.yml'

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_SECRET_KEY }}

      - name: Build and push Backend
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:latest
          build-args: |
            NODE_ENV=production

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "${{ secrets.GHCR_SECRET_KEY }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # Pull backend image
            docker pull ghcr.io/${{ github.repository }}:latest
            
            # Stop and remove old container if it exists
            docker stop api-connect2card || true && docker rm api-connect2card || true

            # Run new container with environment variables
            docker run -d --name api-connect2card \
              -p 2001:2001 \
              -e MONGODB_URI="${{ secrets.MONGODB_URI }}" \
              -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              -e PORT=2001 \
              -e USERSMTP="${{ secrets.USERSMTP }}" \
              -e USERHOST="${{ secrets.USERHOST }}" \
              -e CORS_ORIGINS="${{ secrets.CORS_ORIGINS }}" \
              -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"\
              -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"\
              -e AWS_S3_BUCKET="${{ secrets.AWS_S3_BUCKET }}"\
              -e AWS_REGION="${{ secrets.AWS_REGION }}"\
              -e NODE_ENV="production" \
              -e PORT=2001 \
              --restart unless-stopped \
              ghcr.io/${{ github.repository }}:latest